mixin formFor(entity = null)
  form&attributes(attributes)
    block

mixin input(entity, propertyName, errors = {})
  - propertyErrors = _.get(errors, propertyName)
  - classLine = 'form-control' + (_.isEmpty(propertyErrors) ? '' : ' is-invalid')
  - inputId = getInputId(propertyName)
  .form-floating.mb-3(class=(errors[propertyName] && 'has-danger'))
    input(
      id = inputId
      name = getInputName(propertyName)
      class = classLine
      value = _.get(entity, propertyName, '')
    )&attributes(attributes)
    label(for = inputId)= attributes.placeholder || propertyName
    if !_.isEmpty(propertyErrors)
      .invalid-feedback= propertyErrors.map(({ message }) => message).join('. ')

mixin submit(form = null)
  input(class='btn btn-primary' type='submit')&attributes(attributes)

mixin buttonTo(action, method)
  form(action = action, method = 'post')
    input(name='_method' type='hidden' value=method)
    input(type='submit')&attributes(attributes)
